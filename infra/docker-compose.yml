services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: stock_market
      POSTGRES_USER: stock_user
      POSTGRES_PASSWORD: stock_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # C++ backend service
  cpp-backend:
    build:
      context: ../core-cpp
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - kafka

  # Python agents service
  python-agents:
    build:
      context: ../agents-python
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
      - kafka

  # GPU Acceleration service
  gpu-acceleration:
    build:
      context: ../gpu-acceleration-rust
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
      - kafka

  # Frontend service
  frontend:
    build:
      context: ../frontend-react
      dockerfile: Dockerfile
      args:
        # Use this ARG in your frontend Dockerfile to pick correct command
        USE_LOCKFILE: "true"
    ports:
      - "3001:3000"
    depends_on:
      - cpp-backend

volumes:
  postgres_data:
